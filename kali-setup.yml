---
- hosts: localhost

  tasks:

    - name: Get user name
      shell: whoami
      register: user_name

    - name: Get user desktop folder
      shell: xdg-user-dir DESKTOP
      register: user_desktop

    - name: Get architecture
      shell: |
        archi=$(uname -m)
        if [ "${archi}" = "aarch64" ]
        then
            echo "arm64"
        elif [ "${archi}" = "arm64" ]
        then
            echo "arm64"
        else
            echo "x64"
        fi
      register: arch

    - name: Get Virtual Env
      shell: systemd-detect-virt | awk '{print tolower($0)}'
      register: virt_env

    - name: Debug variables
      debug:
        msg: 
          - "user_name: {{ user_name.stdout }}"
          - "user_desktop: {{ user_desktop.stdout }}"
          - "arch: {{ arch.stdout }}"
          - "virt_env: {{ virt_env.stdout }}"

    - name: Install vscode
      become: true
      apt: 
        deb: "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-{{ arch.stdout }}" 

    - name: Install packages
      become: true
      apt:
        name: 
          - burpsuite
          - curl
          - enum4linux
          - feroxbuster
          - gobuster
          - golang-go
          - impacket-scripts
          - ncdu
          - nikto
          - nmap
          - python3-pip
          - python3.11-venv
          - seclists
          - smbclient
          - smbmap
          - terminator
          - tor
        state: present

    - name: Create terminator config folder
      file:
        path: "~/.config/terminator"
        state: directory

    - name: Copy terminator config file
      get_url:
        url: "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/terminator_config"
        dest: "~/.config/terminator/config"

    - name: Unpack rockyou
      become: true
      shell: gunzip -d /usr/share/wordlists/rockyou.txt.gz
      ignore_errors: yes

    - name: Copy aliases
      get_url:
        url: "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/.aliases"
        dest: "~"

    - name: Load aliases in .zshrc
      blockinfile:
        path: "~/.zshrc"
        block: |
          if [ -f ~/.aliases ]; then
              . ~/.aliases
          fi

    - name: Add pipx path
      lineinfile:
        dest: "~/.zshrc"
        line: 'export PATH="$PATH:/home/{{ user_name.stdout }}/.local/bin"'

    - name: Install pipx / pwncat-cs
      shell: |
        python3 -m pip install --user pipx
        export PATH="$PATH:/home/{{ user_name.stdout }}/.local/bin"
        pipx install pwncat-cs

    - name: Setting VIM
      become: true
      copy:
        dest: "{{ item }}"
        content: |
          source $VIMRUNTIME/defaults.vim
          set mouse-=a
      with_items:
        - "/home/{{ user_name.stdout }}/.vimrc"
        - "/root/.vimrc"

    - name: Copy scripts
      become: true
      get_url:
        url: "{{ item }}"
        dest: "/usr/local/bin/"
        mode: "+x"
      with_items:
        - "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/upload"
        - "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/monip"
        - "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/nmaper"
        - "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/vpnchoice"
        - "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/dnsmasq-update"

    - name: Create vpnchoice folder
      file:
        path: "~/ovpn_files"
        state: directory
    
    - name: Install simple-term-menu
      become: true
      shell: python3 -m pip install simple-term-menu
    
    - name: Install updog
      become: true
      shell: python3 -m pip install updog

    - name: Create Tools folder
      file:
        path: "~/Tools"
        state: directory

    - name: Get Tools script
      get_url: 
        url: "https://raw.githubusercontent.com/ThePorgs/Exegol-resources/main/update-resources.sh" 
        dest: "~/Tools/"
        mode: "+x"

    - name: Install Tools
      shell: |
        cd ~/Tools/
        ./update-resources.sh

    - name: Install resizer
      get_url:
        url: "{{ item }}"
        dest: "{{ user_desktop.stdout }}"
        mode: "+x"
      with_items:
        - "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/medium.sh"
        - "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/high.sh"
        - "https://raw.githubusercontent.com/OlivierProTips/kali-resources/master/auto.sh"
      when: virt_env.stdout == "qemu" or virt_env.stdout == "vmware"

    - name: Install ligolo-ng
      become: true
      shell: |
        git clone https://github.com/nicocha30/ligolo-ng /opt/ligolo-ng
        cd /opt/ligolo-ng
        go build -o agent cmd/agent/main.go
        go build -o proxy cmd/proxy/main.go

    - name: Set dnsmasq
      become: true
      shell: |
        NetworkManager_file="/etc/NetworkManager/NetworkManager.conf"
        dns_exist=$(grep "dns=" ${NetworkManager_file})
        if [[ -n ${dns_exist} ]]
        then
            sudo sed -i '/dns=/c dns=dnsmasq' ${NetworkManager_file}
        else
            sudo sed -i '/\[main\]/a dns=dnsmasq' ${NetworkManager_file}
        fi